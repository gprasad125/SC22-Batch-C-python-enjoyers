{"backend_state":"running","connection_file":"/projects/200e8042-15d9-45b5-b665-c79cbc8761e9/.local/share/jupyter/runtime/kernel-f8f966f0-86c1-4562-9b41-780d1bae0f45.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658771495173,"exec_count":1,"id":"e3c20c","input":"import pandas as pd","kernel":"python3-ubuntu","pos":0,"start":1658771494979,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"45a78b","input":"","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d14d08","input":"","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"403034","input":"px.scatter(df,'bmi','charges',color = 'region')","output":{"0":{"data":{"iframe":"02dc1a1561cbfdc55bd020eb5c1ae2b75f1f88ff"},"exec_count":12,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"363ae3","input":"px.scatter(df,'bmi','charges',color = 'children')","output":{"0":{"data":{"iframe":"86ca7e5257541779ebee7a916f692145a2f5d964"},"exec_count":13,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"7ef4c3","input":"px.scatter(df,'bmi','charges',color = 'smoker')","output":{"0":{"data":{"iframe":"fe381c91372a20e89ebdee04b8b2d6f2d88f22ad"},"exec_count":14,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"7a4d2e","input":"px.scatter(df,'age','charges',color = 'smoker')","output":{"0":{"data":{"iframe":"2d959bf6ce0d2b2ffe9ab689c52d750ad3b2d71a"},"exec_count":15,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"246054","input":"px.scatter_matrix(df[['age','bmi','charges']])","output":{"0":{"data":{"iframe":"94b6f5e81d6380bef989bc54467cd862cea007ca"},"exec_count":17,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"dd8fae","input":"df = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"132096","input":"sns.clustermap(pd.crosstab(insurance['age'], insurance['bmi']))","output":{"0":{"ename":"NameError","evalue":"name 'sns' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-e22c11829bee>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclustermap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcrosstab\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minsurance\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'age'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minsurance\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'bmi'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sns' is not defined"]}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"251af7","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>bmi</th>\n      <th>children</th>\n      <th>smoker</th>\n      <th>region</th>\n      <th>charges</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19</td>\n      <td>female</td>\n      <td>27.900</td>\n      <td>0</td>\n      <td>yes</td>\n      <td>southwest</td>\n      <td>16884.92400</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>18</td>\n      <td>male</td>\n      <td>33.770</td>\n      <td>1</td>\n      <td>no</td>\n      <td>southeast</td>\n      <td>1725.55230</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>28</td>\n      <td>male</td>\n      <td>33.000</td>\n      <td>3</td>\n      <td>no</td>\n      <td>southeast</td>\n      <td>4449.46200</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>33</td>\n      <td>male</td>\n      <td>22.705</td>\n      <td>0</td>\n      <td>no</td>\n      <td>northwest</td>\n      <td>21984.47061</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>32</td>\n      <td>male</td>\n      <td>28.880</td>\n      <td>0</td>\n      <td>no</td>\n      <td>northwest</td>\n      <td>3866.85520</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age     sex     bmi  children smoker     region      charges\n0   19  female  27.900         0    yes  southwest  16884.92400\n1   18    male  33.770         1     no  southeast   1725.55230\n2   28    male  33.000         3     no  southeast   4449.46200\n3   33    male  22.705         0     no  northwest  21984.47061\n4   32    male  28.880         0     no  northwest   3866.85520"},"exec_count":6,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"4a0b9a","input":"import plotly.express as px\nimport seaborn as sns","pos":3,"type":"cell"}
{"id":0,"time":1658771486210,"type":"user"}
{"last_load":1658771486806,"type":"file"}