{"backend_state":"running","connection_file":"/projects/200e8042-15d9-45b5-b665-c79cbc8761e9/.local/share/jupyter/runtime/kernel-a9824e87-330f-451d-9800-79044af50896.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"end":1659634305239,"exec_count":5,"id":"4ea3d5","input":"import pandas as pd\nimport numpy as np\ninsurance = pd.read_csv('insurance.csv')","kernel":"ds_env","pos":0,"start":1659634305230,"state":"done","type":"cell"}
{"end":1659634305755,"exec_count":6,"id":"a4817a","input":"insurance.dropna(inplace = True)\ninsurance.drop_duplicates(inplace = True)\ninsurance = insurance.reset_index(drop=True)\n\nlength = len(insurance.index)","kernel":"ds_env","pos":1,"start":1659634305754,"state":"done","type":"cell"}
{"end":1659634306152,"exec_count":7,"id":"74fac9","input":"def change_to_binary(sex):\n\n    if sex == \"male\":\n        return 0\n    elif sex == \"female\":\n        return 1\n\ninsurance['sex'] = insurance['sex'].apply(change_to_binary)\n\ndef change_to_binary(smoker):\n\n    if smoker == \"yes\":\n        return 0\n    elif smoker == \"no\":\n        return 1\ninsurance['smoker'] = insurance['smoker'].apply(change_to_binary)\n\ndef change_to_numerical(region):\n\n    if region == \"northeast\":\n        return 0\n    elif region == \"southeast\":\n        return 1\n    elif region == \"northwest\":\n        return 2\n    elif region == \"southwest\":\n        return 3\n\ninsurance['region'] = insurance['region'].apply(change_to_numerical)","kernel":"ds_env","pos":2,"start":1659634306141,"state":"done","type":"cell"}
{"end":1659634326340,"exec_count":8,"id":"225cd8","input":"target = insurance[\"charges\"]\ninput_columns =  insurance.loc[:, insurance.columns != \"charges\"]","kernel":"ds_env","pos":3,"start":1659634326332,"state":"done","type":"cell"}
{"end":1659634359895,"exec_count":9,"id":"48d35d","input":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"ds_env","pos":4,"start":1659634359351,"state":"done","type":"cell"}
{"end":1659635297816,"exec_count":22,"id":"3e1831","input":"import sklearn\n\nfrom sklearn import tree\n\nrgsr_tree = tree.DecisionTreeRegressor(criterion= 'squared_error',max_depth= 5, max_leaf_nodes= 5, min_impurity_decrease= 1.0, min_samples_leaf= 10)\nrgsr_tree = rgsr_tree.fit(x_train, y_train)\n\ny_tree = clf_tree.predict(x_test)","kernel":"ds_env","pos":5,"start":1659635297807,"state":"done","type":"cell"}
{"end":1659635299607,"exec_count":23,"id":"e39279","input":"rgsr_tree.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.8434288658146752"},"exec_count":23}},"pos":6,"start":1659635299574,"state":"done","type":"cell"}
{"id":"bd73cf","input":"","pos":7,"type":"cell"}
{"id":0,"time":1659637047032,"type":"user"}
{"last_load":1659634230828,"type":"file"}