{"backend_state":"init","connection_file":"/projects/200e8042-15d9-45b5-b665-c79cbc8761e9/.local/share/jupyter/runtime/kernel-28e7f18b-aab2-4165-bd15-4797e54b786e.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"186bfc","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fc09cc","input":"","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"ee2d3f","input":"import pandas as pd\nimport plotly.express as px\nimport seaborn as sns","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"863025","input":"pie_2 = px.pie(insurance, values=\"charges\",names=\"smoker\")\npie_1 = px.pie(insurance, names=\"smoker\")","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"b4d3b3","input":"scatter = px.scatter(insurance,'bmi','charges',color = 'smoker')","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"e331c3","input":"insurance = pd.read_csv('../../finalProject/Data/insurance.csv')","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"a47959","input":"pie_1.write_html(\"pie_1.html\")\npie_2.write_html(\"pie_2.html\")\nscatter.write_html(\"scatter.html\")\n\n","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"5d9a7f","input":"fig = px.imshow(insurance)\nfig","output":{"0":{"data":{"iframe":"94e2c195d45d0946a25b82d833184fc7af2c3ddf"},"exec_count":23,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"713084","input":"def change_to_binary(sex):\n\n    if sex == \"male\":\n        return 0\n    elif sex == \"female\":\n        return 1\n\ninsurance['sex'] = insurance['sex'].apply(change_to_binary)\n\ndef change_to_binary(smoker):\n\n    if smoker == \"yes\":\n        return 0\n    elif smoker == \"no\":\n        return 1\ninsurance['smoker'] = insurance['smoker'].apply(change_to_binary)\n\ndef change_to_numerical(region):\n\n    if region == \"northeast\":\n        return 0\n    elif region == \"southeast\":\n        return 1\n    elif region == \"northwest\":\n        return 2\n    elif region == \"southwest\":\n        return 3\n\ninsurance['region'] = insurance['region'].apply(change_to_numerical)\ninsurance.head(1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>bmi</th>\n      <th>children</th>\n      <th>smoker</th>\n      <th>region</th>\n      <th>charges</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19</td>\n      <td>1</td>\n      <td>27.9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>16884.924</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  sex   bmi  children  smoker  region    charges\n0   19    1  27.9         0       0       3  16884.924"},"exec_count":4,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"id":0,"time":1659536849360,"type":"user"}
{"last_load":1659536849160,"type":"file"}