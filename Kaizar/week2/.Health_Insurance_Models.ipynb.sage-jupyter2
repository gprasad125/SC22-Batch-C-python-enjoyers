{"backend_state":"running","connection_file":"/projects/200e8042-15d9-45b5-b665-c79cbc8761e9/.local/share/jupyter/runtime/kernel-9b20b56a-4995-472c-91d4-5a1d514fa076.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"cell_type":"markdown","id":"cb02bf","input":"## String to Binary\n\n","pos":2.5,"type":"cell"}
{"cell_type":"markdown","id":"cd1f4f","input":"## Data Cleaning\n\n","pos":1.5,"type":"cell"}
{"end":1658943591297,"exec_count":9,"id":"b49b34","input":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport statistics","kernel":"ds_env","pos":0,"start":1658943591278,"state":"done","type":"cell"}
{"end":1658943591701,"exec_count":10,"id":"f70ef8","input":"insurance = pd.read_csv('../../finalProject/Data/insurance.csv')","kernel":"ds_env","pos":1,"start":1658943591678,"state":"done","type":"cell"}
{"end":1658943592886,"exec_count":11,"id":"d783ee","input":"insurance.dropna(inplace = True)\ninsurance.drop_duplicates(inplace = True)\ninsurance = insurance.reset_index(drop=True)\n\nlength = len(insurance.index)","kernel":"ds_env","pos":2,"start":1658943592876,"state":"done","type":"cell"}
{"end":1658943593769,"exec_count":12,"id":"e7b684","input":"def change_to_binary(sex):\n\n    if sex == \"male\":\n        return 0\n    elif sex == \"female\":\n        return 1\n\ninsurance['sex'] = insurance['sex'].apply(change_to_binary)\n\ndef change_to_binary(smoker):\n\n    if smoker == \"yes\":\n        return 0\n    elif smoker == \"no\":\n        return 1\ninsurance['smoker'] = insurance['smoker'].apply(change_to_binary)\n\ndef change_to_numerical(region):\n\n    if region == \"northeast\":\n        return 0\n    elif region == \"southeast\":\n        return 1\n    elif region == \"northwest\":\n        return 2\n    elif region == \"southwest\":\n        return 3\n\ninsurance['region'] = insurance['region'].apply(change_to_numerical)\ninsurance.head(1)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>bmi</th>\n      <th>children</th>\n      <th>smoker</th>\n      <th>region</th>\n      <th>charges</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19</td>\n      <td>1</td>\n      <td>27.9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>16884.924</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  sex   bmi  children  smoker  region    charges\n0   19    1  27.9         0       0       3  16884.924"},"exec_count":12}},"pos":3,"start":1658943593758,"state":"done","type":"cell"}
{"end":1658943594747,"exec_count":13,"id":"1b01eb","input":"sns.heatmap(insurance.corr())","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":13},"1":{"data":{"image/png":"ade14f15281fc981fdabd4be99525705c0779633","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":3.5,"start":1658943594267,"state":"done","type":"cell"}
{"end":1658943632232,"exec_count":14,"id":"943aad","input":"target = insurance[\"charges\"]\ninput_columns = insurance.loc[:, insurance.columns != \"charges\"]","kernel":"ds_env","pos":4,"start":1658943632221,"state":"done","type":"cell"}
{"end":1658943665261,"exec_count":15,"id":"b7c3da","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"ds_env","pos":5,"start":1658943665200,"state":"done","type":"cell"}
{"end":1658943742530,"exec_count":16,"id":"74b4c4","input":"from sklearn import tree\n\nclf_tree = tree.DecisionTreeRegressor()\nclf_tree = clf_tree.fit(x_train, y_train)","kernel":"ds_env","pos":6,"start":1658943742341,"state":"done","type":"cell"}
{"end":1658944342946,"exec_count":18,"id":"b5b760","input":"y_tree = clf_tree.predict(x_test)","kernel":"ds_env","pos":6.5,"start":1658944342933,"state":"done","type":"cell"}
{"end":1658944464515,"exec_count":20,"id":"561f83","input":"clf_tree.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.7040150320827334"},"exec_count":20}},"pos":8,"start":1658944464488,"state":"done","type":"cell"}
{"end":1658947395170,"exec_count":23,"id":"eec613","input":"from sklearn.model_selection import GridSearchCV\n\nparameters = {\n    \"criterion\" : [“squared_error”, “friedman_mse”, “absolute_error”, “poisson”],\n    \"splitter\" : [“best”, “random”]\n    \"max_depth\" : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n    \"min_samples_split\" : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n    \"min_samples_leaf\" : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n    \"min_weight_fraction_leaf\" : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n\n    }","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid character in identifier (594590910.py, line 4)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [23]\u001b[0;36m\u001b[0m\n\u001b[0;31m    \"criterion\" : [“squared_error”, “friedman_mse”, “absolute_error”, “poisson”],\u001b[0m\n\u001b[0m                                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid character in identifier\n"]}},"pos":9,"start":1658947395116,"state":"done","type":"cell"}
{"exec_count":19,"id":"3c8458","input":"from sklearn.metrics import mean_absolute_error\n\nmean_squared_error(y_test, y_tree)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"48593997.2946919"},"exec_count":19}},"pos":7,"state":"done","type":"cell"}
{"id":"f76d17","input":"","pos":10,"type":"cell"}
{"last_load":1658943173914,"type":"file"}