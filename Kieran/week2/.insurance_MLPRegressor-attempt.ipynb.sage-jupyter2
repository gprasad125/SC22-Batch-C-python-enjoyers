{"backend_state":"init","connection_file":"/projects/200e8042-15d9-45b5-b665-c79cbc8761e9/.local/share/jupyter/runtime/kernel-93278a2c-ef5d-4ca8-be8b-21b437ba1ec1.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"81b516","input":"","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c3bdce","input":"","pos":26,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ec95f3","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"203ed9","input":"# import libraries \nimport numpy as np\nimport plotly.express as px\nimport pandas as pd\nimport statistics\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"c4079a","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPRegressor","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"2033a9","input":"x_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"3d0205","input":"mlpr = MLPRegressor(activation='relu', alpha=0.0008, solver='lbfgs', max_iter=8000, max_fun=30000, random_state=3)","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"48efbd","input":"mlpr.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver=&#x27;lbfgs&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPRegressor</label><div class=\"sk-toggleable__content\"><pre>MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver=&#x27;lbfgs&#x27;)</pre></div></div></div></div></div>","text/plain":"MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver='lbfgs')"},"exec_count":13,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"6a0440","input":"y_hat = mlpr.predict(x_test)","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"de1554","input":"mlpr.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.8216841419794257"},"exec_count":15,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"6724ca","input":"MAE = np.mean(abs(y_test - y_hat))\nMAE","output":{"0":{"data":{"text/plain":"2811.8417025910976"},"exec_count":16,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"206962","input":"insurance = pd.read_csv('insurance.csv')","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"9abbf9","input":"y_hat = optimizer.predict(x_test)","output":{"0":{"data":{"text/plain":"9430.217615838765"},"exec_count":21,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"f2e313","input":"","output":{"0":{"data":{"text/plain":"0.7897306979933003"},"exec_count":24,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"29dd60","input":"optimizer.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.06535460725957487"},"exec_count":25,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"c6d617","input":"from sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, y_hat)","output":{"0":{"data":{"text/plain":"26402271.280600812"},"exec_count":26,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"28be98","input":"def smokerToBinary(cond):\n    if cond == \"yes\":\n        return 1\n    elif cond == \"no\":\n        return 0\n\ninsurance[\"binary_smoker\"] = insurance[\"smoker\"].apply(smokerToBinary)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"4d65f0","input":"from sklearn.model_selection import GridSearchCV\n\nparameters = {\n    \"activation\": ['relu'],\n    \"alpha\": [.008],\n    \"solver\": ['lbfgs'],\n    \"max_iter\": [8000],\n    \"max_fun\": [30000],\n    \"random_state\": [3, 4, 5]\n}\n\noptimizer = GridSearchCV(MLPRegressor(), param_grid = parameters)\noptimizer.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=MLPRegressor(),\n             param_grid={&#x27;activation&#x27;: [&#x27;relu&#x27;], &#x27;alpha&#x27;: [0.008],\n                         &#x27;max_fun&#x27;: [30000], &#x27;max_iter&#x27;: [8000],\n                         &#x27;random_state&#x27;: [3, 4, 5], &#x27;solver&#x27;: [&#x27;lbfgs&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=MLPRegressor(),\n             param_grid={&#x27;activation&#x27;: [&#x27;relu&#x27;], &#x27;alpha&#x27;: [0.008],\n                         &#x27;max_fun&#x27;: [30000], &#x27;max_iter&#x27;: [8000],\n                         &#x27;random_state&#x27;: [3, 4, 5], &#x27;solver&#x27;: [&#x27;lbfgs&#x27;]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: MLPRegressor</label><div class=\"sk-toggleable__content\"><pre>MLPRegressor()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPRegressor</label><div class=\"sk-toggleable__content\"><pre>MLPRegressor()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(estimator=MLPRegressor(),\n             param_grid={'activation': ['relu'], 'alpha': [0.008],\n                         'max_fun': [30000], 'max_iter': [8000],\n                         'random_state': [3, 4, 5], 'solver': ['lbfgs']})"},"exec_count":32,"output_type":"execute_result"}},"pos":20,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"4a9efb","input":"optimizer.best_params_","output":{"0":{"data":{"text/plain":"{'activation': 'relu',\n 'alpha': 0.008,\n 'max_fun': 30000,\n 'max_iter': 8000,\n 'random_state': 3,\n 'solver': 'lbfgs'}"},"exec_count":33,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"421dfb","input":"n_r = MLPRegressor(activation='relu', alpha=0.0008, solver='lbfgs', max_iter=8000, max_fun=30000, random_state=3)\nn_r.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver=&#x27;lbfgs&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPRegressor</label><div class=\"sk-toggleable__content\"><pre>MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver=&#x27;lbfgs&#x27;)</pre></div></div></div></div></div>","text/plain":"MLPRegressor(alpha=0.0008, max_fun=30000, max_iter=8000, random_state=3,\n             solver='lbfgs')"},"exec_count":35,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"e58f82","input":"n_r.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.8139090589019422"},"exec_count":36,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"efe55a","input":"def sexToBinary(sex):\n    if sex == \"male\":\n        return 1\n    elif sex == \"female\":\n        return 0\n\ninsurance[\"binary_sex\"] = insurance[\"sex\"].apply(sexToBinary)","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"d943c8","input":"enc_region = pd.get_dummies(insurance[\"region\"])\ninsurance_cleaned = pd.concat((insurance, enc_region), axis=1)","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"d0ecaa","input":"insurance_cleaned.drop(\"smoker\", axis=1, inplace=True)\ninsurance_cleaned.drop(\"sex\", axis=1, inplace=True)\ninsurance_cleaned.drop(\"region\", axis=1, inplace=True)","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"980906","input":"insurance_cleaned.head(1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>bmi</th>\n      <th>children</th>\n      <th>charges</th>\n      <th>binary_smoker</th>\n      <th>binary_sex</th>\n      <th>northeast</th>\n      <th>northwest</th>\n      <th>southeast</th>\n      <th>southwest</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19</td>\n      <td>27.9</td>\n      <td>0</td>\n      <td>16884.924</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age   bmi  children    charges  binary_smoker  binary_sex  northeast  \\\n0   19  27.9         0  16884.924              1           0          0   \n\n   northwest  southeast  southwest  \n0          0          0          1  "},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"287c1f","input":"target = insurance_cleaned[\"charges\"]","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"3fbde8","input":"input_columns = insurance_cleaned.loc[:, insurance_cleaned.columns != \"charges\"]","pos":10,"type":"cell"}
{"id":0,"time":1659536734385,"type":"user"}
{"last_load":1659536734183,"type":"file"}